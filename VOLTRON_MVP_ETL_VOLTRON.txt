let
    Source = Odbc.Query("host=Peanut-impala.cargill.com;port=21050;driver={Cloudera ODBC Driver for Impala};usesystemtruststore=1;ssl=1;checkcertrevocation=0;authmech=1;dsn=peanut", "#(lf)select distinct#(lf)CAL.fiscyear,#(lf)CAL.fiscqtr,#(lf)demand.key_figures,#(lf)demand.customer_id,#(lf)demand.product_id,#(lf)demand.actuals_shipments_qty,#(lf)demand.final_demand,#(lf)demand.final_demand_m1,#(lf)demand.final_demand_m1_future,#(lf)demand.forecasr_model_mape,#(lf)demand.baseuom,#(lf)demand.shipments_and_forecast,#(lf)demand.shipments_and_forecast_m1,#(lf)demand.loaddate,#(lf)demand.business_unit,#(lf)demand.bucket_type,#(lf)customer.customer_id,#(lf)customer.customer_description,#(lf)customer.customer_group,#(lf)customer.soldto_description,#(lf)customer.soldto_id,#(lf)customer.shipto_id,#(lf)customer.planning_customer_id,#(lf)customer.soldto_city,#(lf)customer.soldto_country,#(lf)customer.soldto_state,#(lf)customer.soldto_type,#(lf)CUSTSEG.sales_person_1_description,#(lf)CUSTSEG.sub_channel_1_description,#(lf)CUSTSEG.sales_region_description,#(lf)CUSTSEG.sub_category_2_description,#(lf)product.product_id,#(lf)product.commodity,#(lf)product.commodity_description,#(lf)product.base_unit_of_measure,#(lf)product.abc_description,#(lf)product.abc_code,#(lf)product.product_type,#(lf)product.product_description,#(lf)product.product_line,#(lf)product.product_line_id,#(lf)product.base_unit_of_measure_description,#(lf)product.product_hierarchy,#(lf)product.product_hierarchy_level6,#(lf)product.product_hierarchy_level4,#(lf)product.product_hierarchy_level4_id,#(lf)product.product_hierachy_level5,#(lf)product.product_hierarchy_level5_id,#(lf)product.production_priority,#(lf)product.product_hierarcy_level2,#(lf)product.prdsubfamily#(lf)#(lf)from prd_internal_fibi_ibp.td_ibp_outbound_demand_keyfigures_union  as DEMAND#(lf)#(lf)left join prd_internal_fibi_ibp.md_ibp_outbound_customer as CUSTOMER on DEMAND.customer_id=CUSTOMER.customer_id#(lf)left join prd_internal_fibi_ibp.md_ibp_outbound_product as PRODUCT on DEMAND.product_id=product.product_id#(lf)left join calendar.date_dimension as CAL on CAL.timestamp_dt = DEMAND.key_figures#(lf)left join prd_product_curated_fibi_csst_commercial_na.csst_customer_attributes_curated as CUSTSEG on ((Custseg.customer_number = customer.shipto_id)  AND Custseg.profit_center = 'A212')#(lf)#(lf)where product.product_line = ""HIGH INTENSITY SWEETENER"" and product.product_hierarcy_level2 = ""Tabletop"" #(lf)and demand.key_figures > ""2019-06-01 00:00:00"" and demand.bucket_type = ""MONTH"" and demand.uomtoid = ""EA"" #(lf)"),
    #"Added Conditional Column" = Table.AddColumn(Source, "NET PRICE TAG", each if [soldto_id] = "1500010818" then "WM" else if [soldto_id] = "1500015306" then "SAM" else if [soldto_id] = "1000006438" then "AMZN" else if [soldto_id] = "1000039774" then "AMZN" else "ALL"),
    #"Added Custom" = Table.AddColumn(#"Added Conditional Column", "NET PRICE INDEX", each [product_id]&[NET PRICE TAG]),
    #"Merged Queries" = Table.NestedJoin(#"Added Custom", {"NET PRICE INDEX"}, PRICE_LIST, {"Index"}, "PRICE_LIST", JoinKind.LeftOuter),
    #"Expanded PRICE_LIST" = Table.ExpandTableColumn(#"Merged Queries", "PRICE_LIST", {"Case Price", "Oct 1 Change"}, {"PRICE_LIST.Case Price", "PRICE_LIST.Oct 1 Change"}),
    #"Merged Queries1" = Table.NestedJoin(#"Expanded PRICE_LIST", {"product_id", "sub_category_2_description", "sub_channel_1_description"}, #"COPA - CHAN", {"Material ID", "Customer Attributes (Sold To) Sub-Category 2", "Customer Attributes (Sold To) Sub Channel 1"}, "COPA - CHAN", JoinKind.LeftOuter),
    #"Expanded COPA - CHAN" = Table.ExpandTableColumn(#"Merged Queries1", "COPA - CHAN", {"GP/CASE"}, {"COPA - CHAN.GP/CASE"}),
    #"Merged Queries2" = Table.NestedJoin(#"Expanded COPA - CHAN", {"product_id"}, #"COPA - PROD", {"Material ID"}, "COPA - PROD", JoinKind.LeftOuter),
    #"Expanded COPA - PROD" = Table.ExpandTableColumn(#"Merged Queries2", "COPA - PROD", {"GP/CASE"}, {"COPA - PROD.GP/CASE"}),
    #"Added Conditional Column1" = Table.AddColumn(#"Expanded COPA - PROD", "Effective Case Price", each if [PRICE_LIST.Oct 1 Change] = null then [PRICE_LIST.Case Price] else if [key_figures] >= #datetime(2021, 10, 1, 0, 0, 0) then [PRICE_LIST.Oct 1 Change] else [PRICE_LIST.Case Price]),
    #"Added Conditional Column2" = Table.AddColumn(#"Added Conditional Column1", "Effective GP/Case", each if [#"COPA - CHAN.GP/CASE"] = null then [#"COPA - PROD.GP/CASE"] else [#"COPA - CHAN.GP/CASE"]),
    #"Removed Duplicates" = Table.Distinct(#"Added Conditional Column2"),
    #"Added Custom1" = Table.AddColumn(#"Removed Duplicates", "Gross Revenue", each [Effective Case Price]*[shipments_and_forecast]),
    #"Added Custom2" = Table.AddColumn(#"Added Custom1", "Gross Proft", each [shipments_and_forecast]*[#"Effective GP/Case"]),
    #"Merged Queries3" = Table.NestedJoin(#"Added Custom2", {"product_id"}, PROD_SEG, {"SKU [SKU_UPC] (Code)"}, "PROD_SEG", JoinKind.LeftOuter),
    #"Expanded PROD_SEG" = Table.ExpandTableColumn(#"Merged Queries3", "PROD_SEG", {"Segment"}, {"PROD_SEG.Segment"})
in
    #"Expanded PROD_SEG"